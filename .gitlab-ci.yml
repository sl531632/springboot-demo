variables:
  imageName: 'springboot-demo'
  imageTag: '${CI_COMMIT_REF_NAME}'
  harbor_domain: '192.168.0.100:10010'
  harbor_user: 'admin'
  harbor_pwd: 'pwdxd12345'
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  

stages:
  - build_push_image
  - update_kustomize

variables:
  DOCKER_IMAGE_TAG: "springboot-demo:${CI_COMMIT_REF_NAME}"
  KUSTOMIZE_PATH: "sample001"

build_push_image:
  stage: build_push_image
  image: docker:stable
  script:
    - docker build -t $imageName:$imageTag .
    - docker login -u $harbor_user -p $harbor_pwd $harbor_domain
    - docker tag $imageName:$imageTag $harbor_domain/cicd/$imageName:$imageTag
    - docker push $harbor_domain/cicd/$imageName:$imageTag

update_kustomize:
  stage: update_kustomize
  image: 
    name: tool-kustomize:latest
    pull_policy: if-not-present  # 设置拉取策略
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git clone ssh://git@138.201.34.243:20022/zhu/sample001.git $KUSTOMIZE_PATH
  script:
    - kubectl version --client  # 输出 kubectl 版本信息
    - kustomize version  # 输出 kustomize 版本信息
    - git --version  # 输出 git 版本信息
    - cd $KUSTOMIZE_PATH/overlays/dev  # 进入到 kustomization.yaml 文件所在的目录
    - sed -i "s|newTag: .*|newTag: $DOCKER_IMAGE_TAG|g" kustomization.yaml  # 使用 sed 命令来更新 newTag 的值
    - git add kustomization.yaml
    - git commit -m "Update kustomization with new Docker image"
    - git push origin master
